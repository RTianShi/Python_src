{"created": 1758434956.8959363, "duration": 0.06202197074890137, "exitcode": 1, "root": "/home/rts/\u4e0b\u8f7d/Python_src", "environment": {}, "summary": {"failed": 10, "total": 10, "collected": 10}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "tests/test_add_values.py", "type": "Module"}]}, {"nodeid": "tests/test_add_values.py", "outcome": "passed", "result": [{"nodeid": "tests/test_add_values.py::test_add_values[originalInput0]", "type": "Function", "lineno": 100}, {"nodeid": "tests/test_add_values.py::test_add_values[originalInput1]", "type": "Function", "lineno": 100}, {"nodeid": "tests/test_add_values.py::test_add_values[originalInput2]", "type": "Function", "lineno": 100}, {"nodeid": "tests/test_add_values.py::test_add_values[originalInput3]", "type": "Function", "lineno": 100}, {"nodeid": "tests/test_add_values.py::test_add_values[originalInput4]", "type": "Function", "lineno": 100}, {"nodeid": "tests/test_add_values.py::test_add_values[originalInput5]", "type": "Function", "lineno": 100}, {"nodeid": "tests/test_add_values.py::test_add_values[originalInput6]", "type": "Function", "lineno": 100}, {"nodeid": "tests/test_add_values.py::test_add_values[originalInput7]", "type": "Function", "lineno": 100}, {"nodeid": "tests/test_add_values.py::test_add_values[originalInput8]", "type": "Function", "lineno": 100}, {"nodeid": "tests/test_add_values.py::test_add_values[originalInput9]", "type": "Function", "lineno": 100}]}], "tests": [{"nodeid": "tests/test_add_values.py::test_add_values[originalInput0]", "lineno": 100, "outcome": "failed", "keywords": ["test_add_values[originalInput0]", "parametrize", "pytestmark", "originalInput0", "test_add_values.py", "tests", "Python_src", ""], "setup": {"duration": 0.0010987550049321726, "outcome": "passed"}, "call": {"duration": 0.00013721900177188218, "outcome": "failed", "crash": {"path": "/home/rts/\u4e0b\u8f7d/Python_src/src/add_values.py", "lineno": 4, "message": "TypeError: unsupported operand type(s) for +=: 'NoneType' and 'int'"}, "traceback": [{"path": "test_add_values.py", "lineno": 114, "message": ""}, {"path": "../src/add_values.py", "lineno": 4, "message": "TypeError"}], "longrepr": "originalInput = [1, 3, 2, 6, 9]\n\n    @pytest.mark.parametrize(\"originalInput\", [\n        [1, 3, 2, 6, 9],\n        [2, 1, 4, 4, 2],\n        [4, -2, 4, 6, 2],\n        [9, 2, 1, 5, 3, 2],\n        [-1, 9, 1, -3, -3],\n        [8, 3, 2, 6, 2, 3],\n        [1, 2, 3, 4, -5, 6],\n        [1, 2, 4, 2, 7, 5],\n        [1, 1, 2, 4, 1, 2],\n        [-2, 3, 1, 4, 7],\n    ])\n    def test_add_values(originalInput):\n>       originalResult = add_values(originalInput)\n\ntest_add_values.py:114: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata = [1, 3, 2, 6, 9]\n\n    def add_values(data):\n        sum = None\n        for i in data:\n>           sum += i\nE           TypeError: unsupported operand type(s) for +=: 'NoneType' and 'int'\n\n../src/add_values.py:4: TypeError"}, "teardown": {"duration": 0.0002551420038798824, "outcome": "passed"}}, {"nodeid": "tests/test_add_values.py::test_add_values[originalInput1]", "lineno": 100, "outcome": "failed", "keywords": ["test_add_values[originalInput1]", "parametrize", "pytestmark", "originalInput1", "test_add_values.py", "tests", "Python_src", ""], "setup": {"duration": 0.0002472060004947707, "outcome": "passed"}, "call": {"duration": 0.00014417099009733647, "outcome": "failed", "crash": {"path": "/home/rts/\u4e0b\u8f7d/Python_src/src/add_values.py", "lineno": 4, "message": "TypeError: unsupported operand type(s) for +=: 'NoneType' and 'int'"}, "traceback": [{"path": "test_add_values.py", "lineno": 114, "message": ""}, {"path": "../src/add_values.py", "lineno": 4, "message": "TypeError"}], "longrepr": "originalInput = [2, 1, 4, 4, 2]\n\n    @pytest.mark.parametrize(\"originalInput\", [\n        [1, 3, 2, 6, 9],\n        [2, 1, 4, 4, 2],\n        [4, -2, 4, 6, 2],\n        [9, 2, 1, 5, 3, 2],\n        [-1, 9, 1, -3, -3],\n        [8, 3, 2, 6, 2, 3],\n        [1, 2, 3, 4, -5, 6],\n        [1, 2, 4, 2, 7, 5],\n        [1, 1, 2, 4, 1, 2],\n        [-2, 3, 1, 4, 7],\n    ])\n    def test_add_values(originalInput):\n>       originalResult = add_values(originalInput)\n\ntest_add_values.py:114: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata = [2, 1, 4, 4, 2]\n\n    def add_values(data):\n        sum = None\n        for i in data:\n>           sum += i\nE           TypeError: unsupported operand type(s) for +=: 'NoneType' and 'int'\n\n../src/add_values.py:4: TypeError"}, "teardown": {"duration": 0.00011667799844872206, "outcome": "passed"}}, {"nodeid": "tests/test_add_values.py::test_add_values[originalInput2]", "lineno": 100, "outcome": "failed", "keywords": ["test_add_values[originalInput2]", "parametrize", "pytestmark", "originalInput2", "test_add_values.py", "tests", "Python_src", ""], "setup": {"duration": 0.0001335359993390739, "outcome": "passed"}, "call": {"duration": 9.576001320965588e-05, "outcome": "failed", "crash": {"path": "/home/rts/\u4e0b\u8f7d/Python_src/src/add_values.py", "lineno": 4, "message": "TypeError: unsupported operand type(s) for +=: 'NoneType' and 'int'"}, "traceback": [{"path": "test_add_values.py", "lineno": 114, "message": ""}, {"path": "../src/add_values.py", "lineno": 4, "message": "TypeError"}], "longrepr": "originalInput = [4, -2, 4, 6, 2]\n\n    @pytest.mark.parametrize(\"originalInput\", [\n        [1, 3, 2, 6, 9],\n        [2, 1, 4, 4, 2],\n        [4, -2, 4, 6, 2],\n        [9, 2, 1, 5, 3, 2],\n        [-1, 9, 1, -3, -3],\n        [8, 3, 2, 6, 2, 3],\n        [1, 2, 3, 4, -5, 6],\n        [1, 2, 4, 2, 7, 5],\n        [1, 1, 2, 4, 1, 2],\n        [-2, 3, 1, 4, 7],\n    ])\n    def test_add_values(originalInput):\n>       originalResult = add_values(originalInput)\n\ntest_add_values.py:114: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata = [4, -2, 4, 6, 2]\n\n    def add_values(data):\n        sum = None\n        for i in data:\n>           sum += i\nE           TypeError: unsupported operand type(s) for +=: 'NoneType' and 'int'\n\n../src/add_values.py:4: TypeError"}, "teardown": {"duration": 0.00011672999244183302, "outcome": "passed"}}, {"nodeid": "tests/test_add_values.py::test_add_values[originalInput3]", "lineno": 100, "outcome": "failed", "keywords": ["test_add_values[originalInput3]", "parametrize", "pytestmark", "originalInput3", "test_add_values.py", "tests", "Python_src", ""], "setup": {"duration": 0.00013067200779914856, "outcome": "passed"}, "call": {"duration": 0.00011807600094471127, "outcome": "failed", "crash": {"path": "/home/rts/\u4e0b\u8f7d/Python_src/src/add_values.py", "lineno": 4, "message": "TypeError: unsupported operand type(s) for +=: 'NoneType' and 'int'"}, "traceback": [{"path": "test_add_values.py", "lineno": 114, "message": ""}, {"path": "../src/add_values.py", "lineno": 4, "message": "TypeError"}], "longrepr": "originalInput = [9, 2, 1, 5, 3, 2]\n\n    @pytest.mark.parametrize(\"originalInput\", [\n        [1, 3, 2, 6, 9],\n        [2, 1, 4, 4, 2],\n        [4, -2, 4, 6, 2],\n        [9, 2, 1, 5, 3, 2],\n        [-1, 9, 1, -3, -3],\n        [8, 3, 2, 6, 2, 3],\n        [1, 2, 3, 4, -5, 6],\n        [1, 2, 4, 2, 7, 5],\n        [1, 1, 2, 4, 1, 2],\n        [-2, 3, 1, 4, 7],\n    ])\n    def test_add_values(originalInput):\n>       originalResult = add_values(originalInput)\n\ntest_add_values.py:114: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata = [9, 2, 1, 5, 3, 2]\n\n    def add_values(data):\n        sum = None\n        for i in data:\n>           sum += i\nE           TypeError: unsupported operand type(s) for +=: 'NoneType' and 'int'\n\n../src/add_values.py:4: TypeError"}, "teardown": {"duration": 0.00013689498882740736, "outcome": "passed"}}, {"nodeid": "tests/test_add_values.py::test_add_values[originalInput4]", "lineno": 100, "outcome": "failed", "keywords": ["test_add_values[originalInput4]", "parametrize", "pytestmark", "originalInput4", "test_add_values.py", "tests", "Python_src", ""], "setup": {"duration": 0.0001410469994880259, "outcome": "passed"}, "call": {"duration": 0.00010002500494010746, "outcome": "failed", "crash": {"path": "/home/rts/\u4e0b\u8f7d/Python_src/src/add_values.py", "lineno": 4, "message": "TypeError: unsupported operand type(s) for +=: 'NoneType' and 'int'"}, "traceback": [{"path": "test_add_values.py", "lineno": 114, "message": ""}, {"path": "../src/add_values.py", "lineno": 4, "message": "TypeError"}], "longrepr": "originalInput = [-1, 9, 1, -3, -3]\n\n    @pytest.mark.parametrize(\"originalInput\", [\n        [1, 3, 2, 6, 9],\n        [2, 1, 4, 4, 2],\n        [4, -2, 4, 6, 2],\n        [9, 2, 1, 5, 3, 2],\n        [-1, 9, 1, -3, -3],\n        [8, 3, 2, 6, 2, 3],\n        [1, 2, 3, 4, -5, 6],\n        [1, 2, 4, 2, 7, 5],\n        [1, 1, 2, 4, 1, 2],\n        [-2, 3, 1, 4, 7],\n    ])\n    def test_add_values(originalInput):\n>       originalResult = add_values(originalInput)\n\ntest_add_values.py:114: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata = [-1, 9, 1, -3, -3]\n\n    def add_values(data):\n        sum = None\n        for i in data:\n>           sum += i\nE           TypeError: unsupported operand type(s) for +=: 'NoneType' and 'int'\n\n../src/add_values.py:4: TypeError"}, "teardown": {"duration": 0.00011969100160058588, "outcome": "passed"}}, {"nodeid": "tests/test_add_values.py::test_add_values[originalInput5]", "lineno": 100, "outcome": "failed", "keywords": ["test_add_values[originalInput5]", "parametrize", "pytestmark", "originalInput5", "test_add_values.py", "tests", "Python_src", ""], "setup": {"duration": 0.00012617600441444665, "outcome": "passed"}, "call": {"duration": 9.260200022254139e-05, "outcome": "failed", "crash": {"path": "/home/rts/\u4e0b\u8f7d/Python_src/src/add_values.py", "lineno": 4, "message": "TypeError: unsupported operand type(s) for +=: 'NoneType' and 'int'"}, "traceback": [{"path": "test_add_values.py", "lineno": 114, "message": ""}, {"path": "../src/add_values.py", "lineno": 4, "message": "TypeError"}], "longrepr": "originalInput = [8, 3, 2, 6, 2, 3]\n\n    @pytest.mark.parametrize(\"originalInput\", [\n        [1, 3, 2, 6, 9],\n        [2, 1, 4, 4, 2],\n        [4, -2, 4, 6, 2],\n        [9, 2, 1, 5, 3, 2],\n        [-1, 9, 1, -3, -3],\n        [8, 3, 2, 6, 2, 3],\n        [1, 2, 3, 4, -5, 6],\n        [1, 2, 4, 2, 7, 5],\n        [1, 1, 2, 4, 1, 2],\n        [-2, 3, 1, 4, 7],\n    ])\n    def test_add_values(originalInput):\n>       originalResult = add_values(originalInput)\n\ntest_add_values.py:114: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata = [8, 3, 2, 6, 2, 3]\n\n    def add_values(data):\n        sum = None\n        for i in data:\n>           sum += i\nE           TypeError: unsupported operand type(s) for +=: 'NoneType' and 'int'\n\n../src/add_values.py:4: TypeError"}, "teardown": {"duration": 0.00012586200318764895, "outcome": "passed"}}, {"nodeid": "tests/test_add_values.py::test_add_values[originalInput6]", "lineno": 100, "outcome": "failed", "keywords": ["test_add_values[originalInput6]", "parametrize", "pytestmark", "originalInput6", "test_add_values.py", "tests", "Python_src", ""], "setup": {"duration": 0.00013400700117927045, "outcome": "passed"}, "call": {"duration": 0.00014889500744175166, "outcome": "failed", "crash": {"path": "/home/rts/\u4e0b\u8f7d/Python_src/src/add_values.py", "lineno": 4, "message": "TypeError: unsupported operand type(s) for +=: 'NoneType' and 'int'"}, "traceback": [{"path": "test_add_values.py", "lineno": 114, "message": ""}, {"path": "../src/add_values.py", "lineno": 4, "message": "TypeError"}], "longrepr": "originalInput = [1, 2, 3, 4, -5, 6]\n\n    @pytest.mark.parametrize(\"originalInput\", [\n        [1, 3, 2, 6, 9],\n        [2, 1, 4, 4, 2],\n        [4, -2, 4, 6, 2],\n        [9, 2, 1, 5, 3, 2],\n        [-1, 9, 1, -3, -3],\n        [8, 3, 2, 6, 2, 3],\n        [1, 2, 3, 4, -5, 6],\n        [1, 2, 4, 2, 7, 5],\n        [1, 1, 2, 4, 1, 2],\n        [-2, 3, 1, 4, 7],\n    ])\n    def test_add_values(originalInput):\n>       originalResult = add_values(originalInput)\n\ntest_add_values.py:114: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata = [1, 2, 3, 4, -5, 6]\n\n    def add_values(data):\n        sum = None\n        for i in data:\n>           sum += i\nE           TypeError: unsupported operand type(s) for +=: 'NoneType' and 'int'\n\n../src/add_values.py:4: TypeError"}, "teardown": {"duration": 0.00013136300549376756, "outcome": "passed"}}, {"nodeid": "tests/test_add_values.py::test_add_values[originalInput7]", "lineno": 100, "outcome": "failed", "keywords": ["test_add_values[originalInput7]", "parametrize", "pytestmark", "originalInput7", "test_add_values.py", "tests", "Python_src", ""], "setup": {"duration": 0.00012924599286634475, "outcome": "passed"}, "call": {"duration": 9.4271992566064e-05, "outcome": "failed", "crash": {"path": "/home/rts/\u4e0b\u8f7d/Python_src/src/add_values.py", "lineno": 4, "message": "TypeError: unsupported operand type(s) for +=: 'NoneType' and 'int'"}, "traceback": [{"path": "test_add_values.py", "lineno": 114, "message": ""}, {"path": "../src/add_values.py", "lineno": 4, "message": "TypeError"}], "longrepr": "originalInput = [1, 2, 4, 2, 7, 5]\n\n    @pytest.mark.parametrize(\"originalInput\", [\n        [1, 3, 2, 6, 9],\n        [2, 1, 4, 4, 2],\n        [4, -2, 4, 6, 2],\n        [9, 2, 1, 5, 3, 2],\n        [-1, 9, 1, -3, -3],\n        [8, 3, 2, 6, 2, 3],\n        [1, 2, 3, 4, -5, 6],\n        [1, 2, 4, 2, 7, 5],\n        [1, 1, 2, 4, 1, 2],\n        [-2, 3, 1, 4, 7],\n    ])\n    def test_add_values(originalInput):\n>       originalResult = add_values(originalInput)\n\ntest_add_values.py:114: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata = [1, 2, 4, 2, 7, 5]\n\n    def add_values(data):\n        sum = None\n        for i in data:\n>           sum += i\nE           TypeError: unsupported operand type(s) for +=: 'NoneType' and 'int'\n\n../src/add_values.py:4: TypeError"}, "teardown": {"duration": 0.0001144740090239793, "outcome": "passed"}}, {"nodeid": "tests/test_add_values.py::test_add_values[originalInput8]", "lineno": 100, "outcome": "failed", "keywords": ["test_add_values[originalInput8]", "parametrize", "pytestmark", "originalInput8", "test_add_values.py", "tests", "Python_src", ""], "setup": {"duration": 0.00012651100405491889, "outcome": "passed"}, "call": {"duration": 0.00013274099910631776, "outcome": "failed", "crash": {"path": "/home/rts/\u4e0b\u8f7d/Python_src/src/add_values.py", "lineno": 4, "message": "TypeError: unsupported operand type(s) for +=: 'NoneType' and 'int'"}, "traceback": [{"path": "test_add_values.py", "lineno": 114, "message": ""}, {"path": "../src/add_values.py", "lineno": 4, "message": "TypeError"}], "longrepr": "originalInput = [1, 1, 2, 4, 1, 2]\n\n    @pytest.mark.parametrize(\"originalInput\", [\n        [1, 3, 2, 6, 9],\n        [2, 1, 4, 4, 2],\n        [4, -2, 4, 6, 2],\n        [9, 2, 1, 5, 3, 2],\n        [-1, 9, 1, -3, -3],\n        [8, 3, 2, 6, 2, 3],\n        [1, 2, 3, 4, -5, 6],\n        [1, 2, 4, 2, 7, 5],\n        [1, 1, 2, 4, 1, 2],\n        [-2, 3, 1, 4, 7],\n    ])\n    def test_add_values(originalInput):\n>       originalResult = add_values(originalInput)\n\ntest_add_values.py:114: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata = [1, 1, 2, 4, 1, 2]\n\n    def add_values(data):\n        sum = None\n        for i in data:\n>           sum += i\nE           TypeError: unsupported operand type(s) for +=: 'NoneType' and 'int'\n\n../src/add_values.py:4: TypeError"}, "teardown": {"duration": 0.0001953719911398366, "outcome": "passed"}}, {"nodeid": "tests/test_add_values.py::test_add_values[originalInput9]", "lineno": 100, "outcome": "failed", "keywords": ["test_add_values[originalInput9]", "parametrize", "pytestmark", "originalInput9", "test_add_values.py", "tests", "Python_src", ""], "setup": {"duration": 0.0001516860065748915, "outcome": "passed"}, "call": {"duration": 9.867000335361809e-05, "outcome": "failed", "crash": {"path": "/home/rts/\u4e0b\u8f7d/Python_src/src/add_values.py", "lineno": 4, "message": "TypeError: unsupported operand type(s) for +=: 'NoneType' and 'int'"}, "traceback": [{"path": "test_add_values.py", "lineno": 114, "message": ""}, {"path": "../src/add_values.py", "lineno": 4, "message": "TypeError"}], "longrepr": "originalInput = [-2, 3, 1, 4, 7]\n\n    @pytest.mark.parametrize(\"originalInput\", [\n        [1, 3, 2, 6, 9],\n        [2, 1, 4, 4, 2],\n        [4, -2, 4, 6, 2],\n        [9, 2, 1, 5, 3, 2],\n        [-1, 9, 1, -3, -3],\n        [8, 3, 2, 6, 2, 3],\n        [1, 2, 3, 4, -5, 6],\n        [1, 2, 4, 2, 7, 5],\n        [1, 1, 2, 4, 1, 2],\n        [-2, 3, 1, 4, 7],\n    ])\n    def test_add_values(originalInput):\n>       originalResult = add_values(originalInput)\n\ntest_add_values.py:114: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata = [-2, 3, 1, 4, 7]\n\n    def add_values(data):\n        sum = None\n        for i in data:\n>           sum += i\nE           TypeError: unsupported operand type(s) for +=: 'NoneType' and 'int'\n\n../src/add_values.py:4: TypeError"}, "teardown": {"duration": 0.0001246210013050586, "outcome": "passed"}}], "warnings": [{"message": "Unknown config option: pytest -vv --tb\n", "category": "PytestConfigWarning", "when": "config", "filename": "/home/rts/anaconda3/envs/mutmut39/lib/python3.9/site-packages/_pytest/config/__init__.py", "lineno": 1474}]}